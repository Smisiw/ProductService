name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Create .env file
        run: |
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "JWT_EXPIRATION=${{ vars.JWT_EXPIRATION }}" >> .env
          echo "JWT_REFRESH_EXPIRATION=${{ vars.JWT_REFRESH_EXPIRATION }}" >> .env

      - name: Кеширование зависимостей Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Установка Docker Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose

      - name: Логин в Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Остановка и удаление старых контейнеров
        run: docker compose down -v || true

      - name: Запуск контейнеров с пересборкой
        run: docker compose up --build -d

      - name: Пуш Docker-образа в Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/auth_service
